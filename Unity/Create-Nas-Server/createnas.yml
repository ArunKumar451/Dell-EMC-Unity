- hosts: unity
  vars:
    user: "admin"
    password: "Password1234#"
    nas_id: ""
    nas_name: "MyNAS"  # Example variable for nas_name
  tasks:
    - name: Authenticate & retrieve cookie
      uri:
        url: https://{{ inventory_hostname }}/api/types/loginSessionInfo/instances?language=en-US&fields=id
        method: GET
        headers:
          "x-emc-rest-client": "TRUE"
        user: "{{ user }}"
        password: "{{ password }}"
        force_basic_auth: yes
        validate_certs: no
      register: result

    - name: Render NAS details template
      template:
        src: ./nasdetails.2j
        dest: ./nasdetails.conf

    - name: Debug rendered NAS details
      debug:
        msg: "{{ lookup('file', 'nasdetails.conf', convert_data=False) }}"

    - name: Create NAS
      uri:
        url: https://{{ inventory_hostname }}/api/types/nasServer/instances
        method: POST
        user: "{{ user }}"
        password: "{{ password }}"
        force_basic_auth: yes
        validate_certs: no
        body: "{{ lookup('file', 'nasdetails.conf', convert_data=False) }}"
        body_format: json
        http_agent: Ansible
        remote_src: no
        follow_redirects: yes
        return_content: yes
        force: yes
        status_code: [201, 422]
        headers:
          cookie: "{{ result.cookies | dictsort(false) | map('join', '=') | join('; ') }}"
          Content-type: application/json
          Accept: application/json
          EMC-CSRF-TOKEN: "{{ result.emc_csrf_token }}"
          X-EMC-REST-CLIENT: true
      register: nas_create_result

    - name: Debug NAS creation result
      debug:
        msg: "{{ nas_create_result }}"

    - name: GET NAS ID
      set_fact:
        nas_id: "{{ nas_create_result.json.content.id }}"

    - name: Debug NAS ID
      debug:
        msg: "{{ nas_id }}"

    - name: Render interface template
      template:
        src: ./interface_template.2j
        dest: ./interface_template.conf

    - name: Debug rendered interface template
      debug:
        msg: "{{ lookup('file', 'interface_template.conf', convert_data=False) }}"

    - name: Assign IP & interface to NAS server
      uri:
        url: https://{{ inventory_hostname }}/api/types/fileInterface/instances
        method: POST
        user: "{{ user }}"
        password: "{{ password }}"
        force_basic_auth: yes
        validate_certs: no
        body: "{{ lookup('file', 'interface_template.conf', convert_data=False) }}"
        body_format: json
        http_agent: Ansible
        remote_src: no
        follow_redirects: yes
        return_content: yes
        force: yes
        status_code: [201, 422]
        headers:
          cookie: "{{ result.cookies | dictsort(false) | map('join', '=') | join('; ') }}"
          Content-type: application/json
          Accept: application/json
          EMC-CSRF-TOKEN: "{{ result.emc_csrf_token }}"
          X-EMC-REST-CLIENT: true
        timeout: 60
      register: nas_interface_result

    - name: Debug NAS interface result
      debug:
        msg: "{{ nas_interface_result }}"
